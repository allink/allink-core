/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

General Settings

*/

.content-plugin {

    // in case a background image is set
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;


    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

    Options (via checkboxes or generated by conditions)

    */

    &.container-enabled {
        .inner {
            @include make-row();
            // on XS we have a smaller column padding
            @include make-row-sm-max();
        }
    }

    &.parallax-enabled {
        overflow: hidden;
        position: relative;
        // apply min-height only IF the full height mode is NOT active
        &:not(.full-height-enabled) {
            min-height: $content-plugin-parallax-height-xs;
            @media (min-width:$screen-sm) {
                min-height: $content-plugin-parallax-height-sm;
            }
            @media (min-width:$screen-md) {
                min-height: $content-plugin-parallax-height-md;
            }
            @media (min-width:$screen-lg) {
                min-height: $content-plugin-parallax-height-lg;
            }
            @media (min-width:$screen-xl) {
                min-height: $content-plugin-parallax-height-xl;
            }
        }
        .bg-image {
            background-repeat: no-repeat;
            height: 140%;
            width: 100%;
            background-size: cover;
            background-position: center;
            position: absolute;
            left: 0;
            top: 0;
        }
        .main-col-container {
            position: absolute;
            left: 0;
            right: 0;
            @include content-section-spacing-position();
        }
    }

    &.overlay-enabled {
        position: relative;
        // element only exists, if an OUTER background image has been defined
        .outer-overlay {
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            @include gradient-overlay(50%);
        }
        // element only exists, if an INNER background image has been defined
        .inner-overlay {
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            @include gradient-overlay(66%);
        }
        .heading {
            color: $overlay-heading-color;
        }
        .text-container {
            > * {
                color: $overlay-text-color;
            }
        }
    }

    &.inner-container-has-bg-image {
        .inner {
            margin: 0;
            background-repeat: no-repeat;
            background-size: cover;
            background-position: center;
            position: relative;
            min-height: $content-plugin-inner-bg-container-height-xs;
            @media (min-width:$screen-sm) {
                min-height: $content-plugin-inner-bg-container-height-sm;
            }
            @media (min-width:$screen-md) {
                min-height: $content-plugin-inner-bg-container-height-md;
            }
            @media (min-width:$screen-lg) {
                min-height: $content-plugin-inner-bg-container-height-lg;
            }
            @media (min-width:$screen-xl) {
                min-height: $content-plugin-inner-bg-container-height-xl;
            }
        }
        .main-text-container {
            position: absolute;
            @include content-section-spacing-position(bottom);
            @include content-section-spacing-position(left);
            @include content-section-spacing-position(right);
        }
    }

    &.has-bg-video {

        position: relative;

        // min heights for mobile image
        min-height: $content-plugin-video-mobile-image-height-xs;
        @media (min-width:$screen-sm) {
            min-height: $content-plugin-video-mobile-image-height-sm;
        }
        @media (min-width:$screen-md) {
            min-height: 0;
        }

        .main-col-container {
            position: absolute;
            left: 0;
            right: 0;
            @include content-section-spacing-position();
        }

        .video-container {
            background-size: cover;
            background-position: center center;
            overflow: hidden;

            @media (max-width:$screen-sm-max) {
                position: absolute;
                top: 0;
                right: 0;
                bottom: 0;
                left: 0;
            }

            &.align-right {
                background-position: center right;
            }
            &.align-left {
                background-position: center left;
            }
            .the-video {
                display: none;
                @media (min-width: $screen-md ) {
                    display: block;
                    width: 100% !important;
                    height: auto !important;
                }
            }
        }
    }

    &.full-height-enabled {
        .main-col-container {
            position: absolute;
            left: 0;
            right: 0;
            @include content-section-spacing-position();
        }
    }


    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

    Variations (custom classes)

    */

    // Project specific classes can be defined here..


    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

    Column Definitions

    */

    .col-1 {
        overflow: hidden; // The negativ margin of the make-row() mixin causes the content to overflow. Let's hide it.
        .col {
            @include make-xs-column(24);
        }
    }

    .col-1-1 {
        .col {
            @include make-xs-column(24);
            @include make-md-column(12);
            @include make-spacing-top-sm-max($content-section-col-stack-spacing-small);
        }
    }

    .col-2-1 {
        .col:nth-child(1) {
            @include make-xs-column(24);
            @include make-md-column(12);
            @include make-lg-column(16);
        }
        .col:nth-child(2) {
            @include make-xs-column(24);
            @include make-md-column(12);
            @include make-lg-column(8);
            @include make-spacing-top-sm-max($content-section-col-stack-spacing-small);
        }
    }

    .col-1-2 {
        .col:nth-child(1) {
            @include make-xs-column(24);
            @include make-md-column(12);
            @include make-lg-column(8);
        }
        .col:nth-child(2) {
            @include make-xs-column(24);
            @include make-md-column(12);
            @include make-lg-column(16);
            @include make-spacing-top-sm-max($content-section-col-stack-spacing-small);
        }
    }

    .col-3 {
        .col {
            @include make-xs-column(24);
            @include make-sm-column(12);
            @include make-md-column(8);
            @include make-spacing-top-xs-max($content-section-col-stack-spacing-medium);
            &:nth-child(3) {
                @include make-spacing-top-sm-max($content-section-col-stack-spacing-medium);
            }
            &:first-child {
                margin-top: 0;
            }
        }
    }

    // add smaller columns on XS (we have to fight the specifcy war in order to avoid an !important)
    .col-container {
        .col {
            @include column-padding-sm-max();
        }
    }

}
